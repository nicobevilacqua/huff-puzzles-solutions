
/** 
 *  KECCAK HUFF EXERCISE
 *
 *  When writing solidity, we some times have to perform hashing operations like keccak256 etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that returns the keccak256 of the calldata. Should handle zero calldata
 */


 #define macro MAIN() = takes(0) returns(0) {
    0x04 calldataload 0x04 add    // [offset]
    dup1 calldataload             // [length, offset]
    swap1 0x20 add                // [start, length]
    0x00                          // [i, start, length]

    loop:
      dup2 dup2 add               // [current_pos, i, start, length]
      calldataload                // [current_value, i, start, length]
      dup2                        // [memory_pos, current_value, i, start, length]
      mstore                      // [i, start, length]

      0x20 add                    // [updated_i, start, length]
      dup3 dup2 lt loop jumpi     
    
    swap2                         // [length, start, updated_i]
    returndatasize                // [0x00, length, start, updated_i]
    sha3                          // [hash]

    returndatasize mstore    
    0x20 returndatasize return

 }