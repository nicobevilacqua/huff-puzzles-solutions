
/** 
 *  ADD HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like addition etc
 *  
 *  The task is to write within the `MAIN` macro below, a function that takes in a uint256, adds 1 to it and returns the new value
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function add1(uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
  returndatasize calldataload 0xe0 shr // [func selector]
  __FUNC_SIG(add1) eq implementation jumpi // go to function body
  returndatasize dup1 revert // revert otherwise

  implementation:
    0x04 calldataload // get first parameter
    0x01 add // add 1
    returndatasize mstore // save in memory
    0x20 returndatasize return // return
}