
/** 
 *  MAX_OF_ARRAY HUFF EXERCISE
 *  
 *  In this task, Given an abi encoded array of uint256, return its maximum value. Revert if the array is empty.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function maxOfArray(uint256[]) payable returns(uint256)

#define macro MAIN() = takes(0) returns(0) {

    returndatasize calldataload 0xe0 shr // [func selector]

    dup1 __FUNC_SIG(maxOfArray) eq maxOfArrayImp jumpi

    returndatasize dup1 revert

    maxOfArrayImp:
      MAX_OF_ARRAY()

    returndatasize dup1 revert
}

#define macro MAX_OF_ARRAY() = takes(0) returns (0) {
    0x04 calldataload 0x04 add    // [offset]
    dup1 calldataload             // [length, offset]

    dup1 returndatasize eq fail jumpi  // array.length == 0 => revert

    swap1 0x20 add                  // [start, length]

    returndatasize returndatasize   // [i, max, start, length]

    loop:                           // [i, max, start, length]
      dup4 dup2 eq success jumpi    // i == length => go to success and return max

      dup1 0x20 mul dup4 add        // [current_pos, i, max, start, length]
      calldataload                  // [current_value, i, max, start, length]
      swap1 0x01 add                // [updated_i, current_value, max, start, length]
      swap2                         // [max, current_value, updated_i, start, length]
      
      dup1 dup3 gt continue jumpi
      swap1

      continue:
        pop

      swap1
      
      loop jump
      
    success:
      swap1 returndatasize mstore
      0x20 returndatasize return

    fail:
      returndatasize dup1 revert
}